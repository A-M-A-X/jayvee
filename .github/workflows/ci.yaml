name: CI

on:
  push:
    branches:
      - main
  pull_request:
  workflow_dispatch:

jobs:
  ci:
    name: CI
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - uses: actions/setup-node@v3
        with:
          node-version: 16

      - name: Install dependencies
        run: npm ci

      - name: Langium generate
        run: |
          HASH_BEFORE=$(sha1sum libs/language-server/src/lib/generated/*.ts libs/language-server/syntaxes/*.json libs/language-server/syntaxes/*.ts)

          npm run generate

          HASH_AFTER=$(sha1sum libs/language-server/src/lib/generated/*.ts libs/language-server/syntaxes/*.json libs/language-server/syntaxes/*.ts)

          if [[ $HASH_BEFORE != $HASH_AFTER ]]; then
            echo "The generated code is not up to date."
            echo "Run 'npm run generate' locally and commit the resulting generated code."
            exit 1
          fi

      - uses: nrwl/nx-set-shas@v3

      - name: Lint Nx specific workspace files
        run: npx nx workspace-lint

      - name: Check for unformatted files
        run: |
          npx nx format:check

          if [[ $? != 0 ]]; then
            echo "Nx detected unformatted files."
            echo "Run 'npm run format' locally and commit the changed files."
            exit 1
          fi

      - name: Lint
        run: npx nx affected --target=lint --parallel=3

      - name: Test
        run: npx nx affected --target=test --parallel=3 --ci --code-coverage

      - name: Build
        run: npx nx affected --target=build --parallel=3
