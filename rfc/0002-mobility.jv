pipeline GtfsPipeline {

	block MyHttpExtractor oftype HttpExtractor {
		url: "https://developers.google.com/static/transit/gtfs/examples/sample-feed.zip";
	}

    block ZipArchiveInterpreter oftype ArchiveInterpreter{
    	archiveType: "zip";
    }

	block AgencyFilePicker oftype FilePicker{
		path: "/agency.txt";
	}

	block StopsFilePicker oftype FilePicker{
		path: "/stops.txt";
	}

	block RoutesFilePicker oftype FilePicker{
		path: "/routes.txt";
	}

	block TripsFilePicker oftype FilePicker{
		path:" /trips.txt";
	}

	block StopTimesFilePicker oftype FilePicker{
		path: "/stop_times.txt";
	}

	block CalendarDatesFilePicker oftype FilePicker{
		path: "/calendar_dates.txt";
	}

	block FeedInfoFilePicker oftype FilePicker{
		path: "/feed_info.txt";
	}

	block AgencyCSVInterpreter oftype CSVInterpreter{
	
	}

	block  StopsCSVInterpreter oftype CSVInterpreter{
	
	}

	block RoutesCSVInterpreter oftype CSVInterpreter{
	
	}

	block TripsCSVInterpreter oftype CSVInterpreter{
	
	}

	block StopTimesCSVInterpreter oftype CSVInterpreter{
	
	}

	block CalendarDatesCSVInterpreter oftype CSVInterpreter{
	
	}

	block FeedInfoCSVInterpreter oftype CSVInterpreter{
	
	}

	block AgencyTableInterpreter oftype TableInterpreter  {
		header: true;
		columns:[
			"agency_id" typed text, //Conditional columns are considered as required
			"agency_name" typed text,
			"agency_url" typed text,
			"agency_timezone" typed text
		];
	}

	block StopsTableInterpreter oftype TableInterpreter {
		header: true;
		columns:[
			"stop_id" typed text,
			"stop_name" typed text,
			"stop_lat" typed text,
			"stop_lon" typed text
		];

	}

	block RoutesTableInterpreter oftype TableInterpreter {
		header: true;
		columns: [
			"route_type" typed text,
			"agency_id" typed text
		];
	}

	block TripsTableInterpreter oftype TableInterpreter {
		header: true;
		columns: [
			"route_id" typed text,
			"service_id" typed text,
			"trip_id" typed text
		];
	}

	block StopTimesTableInterpreter oftype TableInterpreter {
		header: true;
		columns: [
			"trip_id" typed text,
			"stop_id" typed text,
			"stop_sequence" typed text,
			"arrival_time" typed text,
			"departure_time" typed text		
		];
	}

	block CalendarDatesTableInterpreter oftype TableInterpreter {
		header: true;
		columns: [
			"service_id" typed text,
			"date" typed text,
			"exception_type" typed text
		];
	}

	block FeedInfoTableInterpreter oftype TableInterpreter {
		header: true;
		columns: [
			"feed_publisher_name" typed text,
			"feed_publisher_url" typed text,
			"feed_lang" typed text
		];
	}



	block AgencyLoader oftype SQLiteLoader {
		table: "Agency";
		file: "./gtfs.db";
	}

	block StopsLoader oftype SQLiteLoader {
		table: "Stops";
		file: "./gtfs.db";
	}


	block RoutesLoader oftype SQLiteLoader {
		table: "Routes";
		file: "./gtfs.db";
	}


	block TripsLoader oftype SQLiteLoader {
		table: "Trips";
		file: "./gtfs.db";
	}


	block StopTimesLoader oftype SQLiteLoader {
		table: "StopTimes";
		file: "./gtfs.db";
	}

	block CalendarDatesLoader oftype SQLiteLoader {
		table: "CalendarDates";
		file: "./gtfs.db";
	}


	block FeedInfoLoader oftype SQLiteLoader {
		table: "FeedInfo";
		file: "./gtfs.db";
	}


	MyHttpExtractor
	-> ZipArchiveInterpreter
			-> AgencyFilePicker
					-> AgencyCSVInterpreter 
							-> AgencyTableInterpreter 
									-> AgencyLoader; 
		ZipArchiveInterpreter
			-> StopsFilePicker 
					-> StopsCSVInterpreter 
							-> StopsTableInterpreter 
									-> StopsLoader;
			
		ZipArchiveInterpreter			
			-> RoutesFilePicker
					-> RoutesCSVInterpreter 
							-> RoutesTableInterpreter 
									-> RoutesLoader;
			
		ZipArchiveInterpreter	
			-> TripsFilePicker 
					-> TripsCSVInterpreter 
							-> TripsTableInterpreter 
									-> TripsLoader;
			
		ZipArchiveInterpreter	
			-> StopTimesFilePicker
					-> StopTimesCSVInterpreter
							-> StopTimesTableInterpreter 
									-> StopTimesLoader;
			
		ZipArchiveInterpreter	
			-> CalendarDatesFilePicker
					-> CalendarDatesCSVInterpreter
							-> CalendarDatesTableInterpreter
									-> CalendarDatesLoader;
			
		ZipArchiveInterpreter	
			-> FeedInfoFilePicker
					-> FeedInfoCSVInterpreter
							-> FeedInfoTableInterpreter
									-> FeedInfoLoader;

}